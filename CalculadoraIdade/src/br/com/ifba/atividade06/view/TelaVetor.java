/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package br.com.ifba.atividade06.view;

import java.util.Arrays;
import java.util.Collections;
import javax.swing.DefaultListModel;
//import javax.swing.JOptionPane;
import javax.swing.JSpinner;
import javax.swing.ListSelectionModel;

/**
 *
 * @author User
 */
public class TelaVetor extends javax.swing.JFrame {
    
    // Dados reais
    String[] valores = {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0"};
    
    //Ultimo indice
    int indice = 0;

    // Modelo da JList
    DefaultListModel<String> listaModel = new DefaultListModel<>();

    

    /**
     * Creates new form TelaVetor
     */
    public TelaVetor() {
        initComponents();
        
        // Torna o editor do JSpinner não editável
       ((JSpinner.DefaultEditor) spnVetor.getEditor()).getTextField().setEditable(false);

        // Preenche a lista com formato "[índice] -> valor"
        for (int i = 0; i < valores.length; i++) {
            listaModel.addElement("[" + i + "] -> " + valores[i]);
        }

        // Aplica o modelo na JList
        lstVetor.setModel(listaModel);

        // Garante que apenas um item possa ser selecionado por vez
        lstVetor.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        lstVetor = new javax.swing.JList<>();
        jLabel1 = new javax.swing.JLabel();
        lblVetor = new javax.swing.JLabel();
        spnVetor = new javax.swing.JSpinner();
        btnAdicionar = new javax.swing.JButton();
        btnRemover = new javax.swing.JButton();
        btnCrescente = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        btnDecrescente = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        lstVetor.setModel(new javax.swing.AbstractListModel<String>() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
        });
        lstVetor.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lstVetorMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(lstVetor);

        getContentPane().add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 60, 130, 230));

        jLabel1.setText("Vetor");
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 20, 40, 40));

        lblVetor.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblVetor.setText("[0]");
        getContentPane().add(lblVetor, new org.netbeans.lib.awtextra.AbsoluteConstraints(350, 30, 50, 20));

        spnVetor.setModel(new javax.swing.SpinnerNumberModel(0, -10, 10, 1));
        getContentPane().add(spnVetor, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 30, 70, 30));

        btnAdicionar.setText("Adicionar");
        btnAdicionar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAdicionarActionPerformed(evt);
            }
        });
        getContentPane().add(btnAdicionar, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 30, 90, 30));

        btnRemover.setText("Remover");
        btnRemover.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRemoverActionPerformed(evt);
            }
        });
        getContentPane().add(btnRemover, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 80, 90, 30));

        btnCrescente.setText("Crescente");
        btnCrescente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCrescenteActionPerformed(evt);
            }
        });
        getContentPane().add(btnCrescente, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 190, 100, 30));

        jLabel2.setText("ORDENAR");
        getContentPane().add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 150, 80, 30));

        btnDecrescente.setText("Decrescente");
        btnDecrescente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDecrescenteActionPerformed(evt);
            }
        });
        getContentPane().add(btnDecrescente, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 240, 100, 30));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void lstVetorMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lstVetorMouseClicked
        indice = lstVetor.getSelectedIndex(); // índice selecionado
        
    if (indice != -1) {
        String valorReal = valores[indice]; // pega o valor real
        lblVetor.setText("[" + valorReal + "]");
        //JOptionPane.showMessageDialog(this, "Você clicou em: " + valorReal);
    }
    }//GEN-LAST:event_lstVetorMouseClicked

    private void btnAdicionarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAdicionarActionPerformed
        
        int vetorSelecionado = (Integer) spnVetor.getValue();
        valores[indice] = Integer.toString(vetorSelecionado);
        
        // Limpando a lista antes de reimprimir os valores
        listaModel.clear();  // Limpa todos os elementos da JList
        
        // Preenche a lista com formato "[índice] -> valor"
        for (int i = 0; i < valores.length; i++) {
            listaModel.addElement("[" + i + "] -> " + valores[i]);
        }
    }//GEN-LAST:event_btnAdicionarActionPerformed

    private void btnRemoverActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRemoverActionPerformed
                
        
        valores[indice] = "0";
        
        // Limpando a lista antes de reimprimir os valores
        listaModel.clear();  // Limpa todos os elementos da JList
        
        // Preenche a lista com formato "[índice] -> valor"
        for (int i = 0; i < valores.length; i++) {
            listaModel.addElement("[" + i + "] -> " + valores[i]);
        }
    }//GEN-LAST:event_btnRemoverActionPerformed

    private void btnCrescenteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCrescenteActionPerformed
        
        //Reorganiza os vetores de forma crescente
        Arrays.sort(valores);
        
        // Limpando a lista antes de reimprimir os valores
        listaModel.clear();  // Limpa todos os elementos da JList
        
        // Preenche a lista com formato "[índice] -> valor"
        for (int i = 0; i < valores.length; i++) {
            listaModel.addElement("[" + i + "] -> " + valores[i]);
        }
        
    }//GEN-LAST:event_btnCrescenteActionPerformed

    private void btnDecrescenteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDecrescenteActionPerformed
       
        // Reorganiza os vetores de forma decrescente
        Arrays.sort(valores, Collections.reverseOrder());
        
        // Limpando a lista antes de reimprimir os valores
        listaModel.clear();  // Limpa todos os elementos da JList
        
        // Preenche a lista com formato "[índice] -> valor"
        for (int i = 0; i < valores.length; i++) {
            listaModel.addElement("[" + i + "] -> " + valores[i]);
        }
    }//GEN-LAST:event_btnDecrescenteActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(TelaVetor.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(TelaVetor.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(TelaVetor.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(TelaVetor.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new TelaVetor().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAdicionar;
    private javax.swing.JButton btnCrescente;
    private javax.swing.JButton btnDecrescente;
    private javax.swing.JButton btnRemover;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblVetor;
    private javax.swing.JList<String> lstVetor;
    private javax.swing.JSpinner spnVetor;
    // End of variables declaration//GEN-END:variables
}
